# Since .env.local is gitignored, you can use .env.local.example to build a new `.env.local` file when you clone the repo.
# Keep this file up-to-date when you add new variables to \`.env.local\`.

# This file will be committed to version control, so make sure not to have any secrets in it.
# If you are cloning this repo, create a copy of this file named `.env.local` and populate it with your secrets.

# Prisma
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
# The [PASSWORD] is generated into Supabase platform (https://app.supabase.com/project/)

# Connect to Supabase with PgBouncer.
# DATABASE_URL="postgres://postgres:__PASSWORD__@db.__YOUR_SUPABASE_PROJECT__.supabase.co:6543/postgres?pgbouncer=true"
# Direct connection to the database. Used for migrations.
# DIRECT_URL="postgres://postgres:__PASSWORD__@db.__YOUR SUPABASE_PROJECT__.supabase.co:5432/postgres"

# WITH DOCKER - DB
# DATABASE_URL="postgresql://root:admin@localhost:5432/started-db?schema=public"
# WITH DOCKER - APP/DB
# DATABASE_URL="postgresql://root:admin@localhost:5432/started-db?schema=public"
DATABASE_URL=""
DIRECT_URL=""

NEXT_PUBLIC_SUPABASE_URL="https://__YOUR_SUPABASE_PROJECT__.supabase.co"
NEXT_PUBLIC_SUPABASE_ANON_KEY=""

# Next Auth
# You can generate a new secret on the command line with:
# openssl rand -base64 32
# https://next-auth.js.org/configuration/options#secret
NEXTAUTH_SECRET="supersecret"
NEXTAUTH_URL="http://localhost:3000"

# Google provider
GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""

# Encript data
# You can generate a new secret_iv on the command line with:
# openssl rand -base64 32
SECRET_IV = 'dadajklasjdalksdjaslk'

# Emails
RESEND_API_KEY=""